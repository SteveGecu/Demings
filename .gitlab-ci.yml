stages: # List of stages for jobs, and their order of execution
  - rovrTest

variables:
  ENVIRONMENT: $ENVIRONMENT
    description: 'The environment variable file (without extension) to use for this test'

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web"
      when: always

.configure-environment: &configure-environment
  - |
    envFile="./environments/${ENVIRONMENT}.env"
    if [[ ! -f "$envFile" ]]; then
      echo "ERROR: ${envFile} does not exist"
      exit 1
    fi

    echo "Loading ${envFile} environment"
    # load environment variables from file, ignore commented (#) lines
    export $(grep -v '^#' $envFile | xargs)

    # create kafka configuration file
    echo 'creating ~/.config directory to house kafka config file'
    mkdir ~/.config

    echo 'Writing kafka config to ~/.config/kafkacatconfluent.conf'
    echo "bootstrap.servers=${CONFLUENT_URL}" >> ~/.config/kafkacatconfluent.conf
    echo "security.protocol=SASL_SSL" >> ~/.config/kafkacatconfluent.conf
    echo "sasl.mechanisms=PLAIN" >> ~/.config/kafkacatconfluent.conf
    echo "sasl.username=${CONFLUENT_USERNAME}" >> ~/.config/kafkacatconfluent.conf
    echo "sasl.password=${CONFLUENT_PASSWORD}" >> ~/.config/kafkacatconfluent.conf

.slack-test-results: &slack-test-results
  - |
    if [ $CI_JOB_STATUS = "success" ]
    then
    result='Succeeded'
    color='#36a64f'
    else
    result='Failed'
    color='#aa3333'
    EOF
    )
    fi

    details=$(cat ./junit.xml)

    body=$(cat  << EOF
    {
        "attachments": [
            {
                "color": "${color}",
                "author_name": "Deming Test Suite Automation Pipeline",
                "author_link": "https://gitlab.com/spacee/deming/rovr-proj/gateway/test-suite-automation/-/pipelines/$CI_PIPELINE_ID",
                "title": "${ENVIRONMENT} Environment Tests ${result}",
                "text": "${details}",
                "footer": "GitLab CI Pipeline",
                "ts": 123456789
            }
        ]
    }

    curl --data-urlencode "payload=$body" $SLACK_WEBHOOK_URL


rovrTest:
  stage: rovrTest
  image: registry.gitlab.com/spacee/spacee-internal-services/spacee-node-ci:latest
  tags:
    - spacee-org-docker
  script:
    - *configure-environment
    - npm install
    - npm run RovrHealthTest
